<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Dan Tanner</title>
    <link>https://dantanner.com/categories/java/</link>
    <description>Recent content in java on Dan Tanner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Apr 2016 02:26:00 +0000</lastBuildDate><atom:link href="https://dantanner.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java.time for the extremely impatient</title>
      <link>https://dantanner.com/post/javatime-for-impatient/</link>
      <pubDate>Wed, 13 Apr 2016 02:26:00 +0000</pubDate>
      
      <guid>https://dantanner.com/post/javatime-for-impatient/</guid>
      <description>This is a super quick history and primer for those familiar with java, but unfamiliar with Joda-Time. Java’s original date and time handling had some issues that could make it cumbersome and error-prone to work with. Then came the Joda-Time library, which is a fantastic replacement for pretty much everything date and time related. It’s intuitive, clean, fully-featured, and performant.
Starting with Java 8, the library was folded into the core JDK, with very few modifications to the Joda API.</description>
    </item>
    
  </channel>
</rss>
